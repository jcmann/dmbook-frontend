{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","redux/displaySlice.js","redux/loginSlice.js","config/config.js","redux/dataSlice.js","redux/store.js","layout/mainContent/authComponents/LogOutButton.js","layout/LoggedInMenu.js","layout/MainMenu.js","layout/ToolMenu.js","layout/SideBar.js","layout/reusables/EditIcon.js","layout/reusables/DeleteIcon.js","layout/reusables/Table.js","layout/mainContent/characters/Characters.js","layout/mainContent/characters/forms/CharacterForm.js","layout/mainContent/characters/AddEditCharacter.js","layout/mainContent/encounters/Encounters.js","layout/mainContent/encounters/forms/EncounterForm.js","layout/mainContent/encounters/AddEditEncounter.js","layout/mainContent/home/Home.js","aws-exports.js","layout/mainContent/login/Login.js","layout/MainContent.js","App.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","displaySlice","createSlice","name","initialState","currentContent","reducers","changeCurrentContent","state","action","payload","newContent","actions","loginSlice","authInfo","authState","user","logOut","window","location","reload","updateAuthInfo","USERS_ENDPOINT","API_BASE_URL","initDatasetThunk","createAsyncThunk","arg","a","dispatch","getState","signal","URL","jwt","response","data","fetch","json","console","error","finalData","deleteResourceThunk","dataEndpoint","method","dataJSON","catch","err","addResourceThunk","body","JSON","stringify","formData","headers","resourceType","newData","editResourceThunk","dataSlice","loadingStatus","isEditing","editResourceID","characters","encounters","monsters","changeEditingStatuses","extraReducers","fulfilled","pending","rejected","log","configureStore","reducer","display","displayReducer","login","loginReducer","dataReducer","LogOutButton","useDispatch","clickHandler","Auth","signOut","onClick","LoggedInMenu","navClickHandler","newContentProvided","href","event","preventDefault","MainMenu","props","ToolMenu","useSelector","className","slice","length","Sidebar","EditIcon","editClickHandler","itemID","DeleteIcon","userData","signInUserSession","idToken","jwtToken","Table","tableStructure","columns","current","scope","entries","currProperty","colSpan","Characters","allData","tableData","type","required","value","undefined","CharacterForm","resourceData","currentlyEditing","filter","useEffect","onSubmit","submitHandler","initialValues","render","handleSubmit","form","submitting","pristine","values","validate","input","meta","placeholder","touched","disabled","reset","AddEditCharacter","h2Text","formType","addNewSubmitHandler","Encounters","encountersData","EncounterForm","component","rows","AddEditEncounter","editSubmitHandler","Home","awsmobile","Amplify","configure","awsconfig","Login","styles","border","MainContent","style","withAuthenticator","currentSession","getIdToken","getJwtToken","promise","abort","onAuthUIStateChange","nextAuthState","authData","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ee124e5f.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t203,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t204,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t205,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t206,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t207,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t208,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t209,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t210,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t211,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t212,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t213,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t214,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t215,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t216,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t217,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t218,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t219,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t220,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t221,\n\t\t30\n\t],\n\t\"./amplify-radio-button_3.entry.js\": [\n\t\t222,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t223,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t224,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t225,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t226,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t227,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t228,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t229,\n\t\t14\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t230,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 174;\nmodule.exports = webpackAsyncContext;","import { createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * This slice determines which MainContent and ToolMenu are being displayed\n */\nexport const displaySlice = createSlice({\n  name: \"displaySlice\",\n  initialState: {\n    currentContent: \"home\",\n  },\n  reducers: {\n    changeCurrentContent: (state, action) => {\n      // console.log(`In Reducer. Payload: ${action.payload.newContent}`);\n      state.currentContent = action.payload.newContent;\n    },\n  },\n});\n\nexport const { changeCurrentContent } = displaySlice.actions;\nexport default displaySlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\n/**\n * This slice tracks whether the user is logged in or not. This affects\n * which menus are displayed.\n */\nexport const loginSlice = createSlice({\n  name: 'loginSlice',\n  initialState: {\n    authInfo: {\n      authState: 'signin',\n      user: {},\n    },\n  },\n  reducers: {\n    logOut: (state, action) => {\n      state = {};\n      window.location.reload();\n    },\n    updateAuthInfo: (state, action) => {\n      state.authInfo = action.payload.authInfo;\n    },\n  },\n});\n\nexport const { logOut, updateAuthInfo } = loginSlice.actions;\nexport default loginSlice.reducer;\n","/**\n * This file will contain all URLs, etc., to be used for local development and not in prod. Low-tech,\n * but it should be copy-pasted into the config.js file in this directory as necessary when deploying or developing.\n */\nexport const API_BASE_URL = \"http://localhost:8080/DMBook_war/api/\";\nexport const USERS_ENDPOINT = API_BASE_URL + \"users/\";\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { USERS_ENDPOINT } from \"../config/config\";\n\n/**\n * This method initializes all data used by the application when the App component renders, using a useEffect.\n * It initializes state data for encounters, characters, and monsters, which is then maintained through other\n * dispatched actions.\n */\nexport const initDatasetThunk = createAsyncThunk(\n  \"api/init\",\n  async (arg, { dispatch, getState, signal }) => {\n    let URL = USERS_ENDPOINT + arg.jwt + \"/all\";\n    let response = \"\";\n    let data = {};\n\n    try {\n      response = await fetch(URL);\n      data = await response.json();\n    } catch (err) {\n      console.error(err);\n    }\n\n    const finalData = {\n      ...data,\n    };\n\n    return finalData;\n  }\n);\n\n/**\n * getAllResources expects the following information passed in as the first argument: the logged-in user's ID\n * Token JWT from auth info, and the endpoint being requested. This information forms the URL that the\n * request is sent to.\n *\n * NOTE: this is deprecated, but I left it to show initial proof of concept\n */\n// export const getAllResourcesThunk = createAsyncThunk(\n//   \"api/getAll\",\n//   async (arg, { dispatch, getState, signal }) => {\n//     let URL = USERS_ENDPOINT + arg.jwt + \"/\" + arg.dataEndpoint;\n//     const response = await fetch(URL)\n//       .then((data) => {\n//         return data.json();\n//       })\n//       .then((dataJSON) => {\n//         // console.log(\"In the getAllResourcesThunk. Data is currently:\");\n//         // console.log(dataJSON);\n//         return dataJSON;\n//       })\n//       .catch((err) => {\n//         console.error(err);\n//       });\n//\n//     return response;\n//   }\n// );\n\n/**\n * This handles all delete requests. It requires an arg object with a JWT, dataEndpoint (ex: encounters), and resource ID (id).\n * It sends a DELETE request to the API.\n */\nexport const deleteResourceThunk = createAsyncThunk(\n  \"api/delete\",\n  async (arg, { dispatch, getState, signal }) => {\n    let URL = USERS_ENDPOINT + arg.jwt + \"/\" + arg.dataEndpoint + \"/\" + arg.id;\n    const response = await fetch(URL, { method: \"DELETE\" })\n      .then((data) => {\n        return data.json();\n      })\n      .then((dataJSON) => {\n        // console.log(\"In the deleteResourceThunk. Response data is currently:\");\n        // console.log(dataJSON);\n        return dataJSON;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n);\n\n/**\n * This thunk handles forming POST requests to send to the API. It requires an arg object with a jwt property,\n * a dataEndpoint property (ex: characters), and formData. formData should be provided via a submit handler.\n */\nexport const addResourceThunk = createAsyncThunk(\n  \"api/post\",\n  async (arg, { dispatch, getState, signal }) => {\n    let URL = USERS_ENDPOINT + arg.jwt + \"/\" + arg.dataEndpoint; // api/users/:jwt/characters for example\n    let body = JSON.stringify(arg.formData);\n    const response = await fetch(URL, {\n      method: \"POST\",\n      body: body,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((dataJSON) => {\n        return dataJSON;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    return { resourceType: arg.dataEndpoint, newData: arg.formData };\n  }\n);\n\n/**\n * This thunk handles PUT requests to the API. It expects an arg object with properties: jwt (ID token), dataEndpoint, and\n * formData.\n * @type {AsyncThunk<unknown, void, {}>}\n */\nexport const editResourceThunk = createAsyncThunk(\n  \"api/put\",\n  async (arg, { dispatch, getState, signal }) => {\n    let URL =\n      USERS_ENDPOINT + arg.jwt + \"/\" + arg.dataEndpoint + \"/\" + arg.formData.id;\n\n    let body = JSON.stringify(arg.formData);\n\n    const response = fetch(URL, {\n      method: \"PUT\",\n      body: body,\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((err) => {\n      console.error(err);\n    });\n\n    return await dispatch(initDatasetThunk({ jwt: arg.jwt }));\n  }\n);\n\n/**\n * This slice handles all connectivity to the API\n */\nexport const dataSlice = createSlice({\n  name: \"dataSlice\",\n  initialState: {\n    loadingStatus: null,\n    isEditing: false,\n    editResourceID: 0,\n    characters: [],\n    encounters: [],\n    monsters: [],\n  },\n  reducers: {\n    changeEditingStatuses(state, action) {\n      state.isEditing = action.payload.isEditing;\n      state.editResourceID = action.payload.editResourceID;\n    },\n  },\n  extraReducers: {\n    [initDatasetThunk.fulfilled](state, { payload }) {\n      // console.log(\"PAYLOAD: \");\n      // console.log(payload);\n      state.characters = payload.characters;\n      state.encounters = payload.encounters;\n      state.monsters = payload.monsters;\n      state.loadingStatus = \"FULFILLED\";\n    },\n    [initDatasetThunk.pending](state) {\n      // console.log(\"PENDING\");\n      state.loadingStatus = \"PENDING\";\n    },\n    [initDatasetThunk.rejected](state, { error }) {\n      state.loadingStatus = \"REJECTED\";\n    },\n    [deleteResourceThunk.fulfilled](state, { payload }) {\n      // console.log(\"In deleteResourceThunk.fulfilled reducer.\");\n      // console.log(payload);\n      state.loadingStatus = \"FULFILLED\";\n    },\n    [deleteResourceThunk.pending](state) {\n      // console.log(\"deleteResource PENDING\");\n      state.loadingStatus = \"PENDING\";\n    },\n    [deleteResourceThunk.rejected](state, { error }) {\n      state.loadingStatus = \"REJECTED\";\n    },\n    [addResourceThunk.fulfilled](state, { payload, dispatch }) {\n      // console.log(\"In addResourceThunk.fulfilled reducer.\");\n      // console.log(payload);\n      state.loadingStatus = \"FULFILLED\";\n    },\n    [addResourceThunk.pending](state) {\n      console.log(\"addResource PENDING\");\n      state.loadingStatus = \"PENDING\";\n    },\n    [addResourceThunk.rejected](state, { error }) {\n      state.loadingStatus = \"REJECTED\";\n    },\n    [editResourceThunk.fulfilled](state, { payload }) {\n      // console.log(\"In editResourceThunk.fulfilled reducer.\");\n      // console.log(payload);\n      state.loadingStatus = \"FULFILLED\";\n    },\n    [editResourceThunk.pending](state) {\n      // console.log(\"editResource PENDING\");\n      state.loadingStatus = \"PENDING\";\n    },\n    [editResourceThunk.rejected](state, { error }) {\n      state.loadingStatus = \"REJECTED\";\n    },\n  },\n});\n\nexport const { changeEditingStatuses } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport displayReducer from \"./displaySlice\";\nimport loginReducer from \"./loginSlice\";\nimport dataReducer from \"./dataSlice\";\n\nexport default configureStore({\n  reducer: {\n    display: displayReducer,\n    login: loginReducer,\n    data: dataReducer,\n  },\n});\n","import { useDispatch } from \"react-redux\";\nimport { logOut } from \"../../../redux/loginSlice\";\nimport { Auth } from \"aws-amplify\";\n\n/**\n * This is a custom-ish signout button that connects to the AWS Amplify Auth object in order\n * to sign the user out in AWS Cognito.\n */\nexport const LogOutButton = () => {\n  const dispatch = useDispatch();\n\n  const clickHandler = async () => {\n    try {\n      await Auth.signOut(); // This is just a pre-built option from AWS\n      await dispatch(logOut());\n    } catch (err) {\n      console.error(\"Error signing out: \" + err);\n    }\n  };\n  return <button onClick={clickHandler}>Sign Out</button>;\n};\n","import { useDispatch } from \"react-redux\";\nimport { changeCurrentContent } from \"../redux/displaySlice\";\nimport { LogOutButton } from \"./mainContent/authComponents/LogOutButton\";\nimport \"../App.css\";\n\n/**\n * A menu that's displayed only when a user is currently logged in. It shows the main menu (home/characters/encounters/sign out).\n */\nconst LoggedInMenu = () => {\n  const dispatch = useDispatch();\n\n  const navClickHandler = (newContentProvided) => {\n    dispatch(changeCurrentContent({ newContent: newContentProvided }));\n  };\n\n  const homeClickHandler = (event) => {\n    event.preventDefault();\n    navClickHandler(\"home\");\n  };\n  const charactersClickHandler = (event) => {\n    event.preventDefault();\n    navClickHandler(\"characters\");\n  };\n  const encountersClickHandler = (event) => {\n    event.preventDefault();\n    navClickHandler(\"encounters\");\n  };\n\n  return (\n    <ul>\n      <li>\n        <a href=\"#\" onClick={homeClickHandler}>\n          Home\n        </a>\n      </li>\n      <li>\n        <a href=\"#\" onClick={charactersClickHandler}>\n          Characters\n        </a>\n      </li>\n      <li>\n        <a href=\"#\" onClick={encountersClickHandler}>\n          Encounters\n        </a>\n      </li>\n      <li>\n        <LogOutButton />\n      </li>\n    </ul>\n  );\n};\n\nexport default LoggedInMenu;\n","import LoggedInMenu from \"./LoggedInMenu\";\nimport { useSelector } from \"react-redux\";\n\nexport const MainMenu = (props) => {\n  return (\n    <nav>\n      <LoggedInMenu />\n    </nav>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeCurrentContent } from \"../redux/displaySlice\";\n\n/**\n * The ToolMenu currently only renders the \"Add new ___\" button. This component also includes some string-processing\n * logic just to make it look better.\n */\nexport const ToolMenu = (props) => {\n  const dispatch = useDispatch();\n\n  const currentContent = useSelector((state) => state.display.currentContent);\n\n  const addNewHandler = (event) => {\n    event.preventDefault();\n    dispatch(changeCurrentContent({ newContent: currentContent + \":add\" }));\n  };\n\n  return (\n    <section className=\"centered\">\n      <button onClick={addNewHandler}>\n        Add new {currentContent.slice(0, currentContent.length - 1)}\n      </button>\n    </section>\n  );\n};\n","import React from \"react\";\nimport { MainMenu } from \"./MainMenu\";\nimport { ToolMenu } from \"./ToolMenu\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * This builds the entire side menu, containing both the main menu and, if appropriate, the tool menu with the\n * button to add a new character or encounter\n */\nexport const Sidebar = (props) => {\n  const currentContent = useSelector((state) => state.display.currentContent);\n\n  return (\n    <aside className=\"col-sm-3 d-flex flex-column align-items-center\">\n      <MainMenu />\n      {(currentContent == \"characters\" || currentContent == \"encounters\") && (\n        <ToolMenu />\n      )}\n    </aside>\n  );\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeCurrentContent } from \"../../redux/displaySlice\";\nimport {\n  editResourceThunk,\n  changeEditingStatuses,\n  initDatasetThunk,\n} from \"../../redux/dataSlice\";\n\nimport \"./EditIcon.css\";\nimport Auth from \"@aws-amplify/auth\";\n\n/**\n * The Edit icon does not have anything to do with actual requests, but instead just switches the content\n * being displayed to the edit form, which then pulls its data directly from state. The EditIcon does change the\n * editing statuses data, namely the isEditing and editResourceID, which is the state the form itself checks.\n */\nconst EditIcon = (props) => {\n  const dispatch = useDispatch();\n\n  // Dispatches actions to correctly display editing content, the rest of which is handled by the form system\n  const editClickHandler = async (event) => {\n    event.preventDefault();\n    dispatch(\n      changeCurrentContent({ newContent: `${props.resourceType}:edit` })\n    );\n    dispatch(\n      changeEditingStatuses({ isEditing: true, editResourceID: props.itemID })\n    );\n  };\n\n  return (\n    <>\n      <a className=\"dmbookIcon\" href=\"\" onClick={editClickHandler}>\n        <i className=\"fas fa-edit\"></i>\n      </a>\n    </>\n  );\n};\n\nexport default EditIcon;\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { deleteResourceThunk, initDatasetThunk } from \"../../redux/dataSlice\";\n\n/**\n * This delete icon is rendered for each row in a table. It requires a resource type and an ID for that resource\n * to be passed in via props. These are then used to build the DELETE request which is sent to the API via the\n * deleteClickHandler/deleteResourceThunk\n */\nconst DeleteIcon = (props) => {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.login.authInfo.user);\n\n  const deleteClickHandler = (event) => {\n    event.preventDefault();\n    dispatch(\n      deleteResourceThunk({\n        jwt: userData.signInUserSession.idToken.jwtToken,\n        dataEndpoint: props.resourceType,\n        id: props.itemID,\n      })\n    );\n    dispatch(\n      initDatasetThunk({ jwt: userData.signInUserSession.idToken.jwtToken })\n    );\n  };\n\n  return (\n    <>\n      <a\n        itemID={props.itemID}\n        className=\"dmbookIcon\"\n        href=\"\"\n        onClick={deleteClickHandler}\n      >\n        <i className=\"fas fa-trash\"></i>\n      </a>\n    </>\n  );\n};\n\nexport default DeleteIcon;\n","import EditIcon from \"./EditIcon\";\nimport DeleteIcon from \"./DeleteIcon\";\n\n/**\n * The Table component dynamically builds a table based on the props provided from its parent component.\n * It requires a few props to work:\n *  - resourceType --> the type of data being displayed (encounters, characters) to pass to the edit/delete icons\n *  - data --> the actual array of objects to be split into rows/columns\n *  - tableStructure --> an array of columns to create\n */\nexport const Table = (props) => {\n  // This builds the actions elements (edit/delete)\n  const dataWithActions = () => {\n    if (props.data !== null) {\n      return props.data.map((current) => {\n        return {\n          actions: (\n            <div className=\"editAndDelete\">\n              <EditIcon itemID={current.id} resourceType={props.resourceType} />\n              <DeleteIcon\n                itemID={current.id}\n                resourceType={props.resourceType}\n              />\n            </div>\n          ),\n          ...current,\n        };\n      });\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          {props.tableStructure.columns.map((current) => (\n            <th scope=\"col\">{current}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {props.data ? (\n          dataWithActions().map((current) => {\n            return (\n              <tr>\n                {Object.entries(current).map((currProperty) => {\n                  return <td>{currProperty[1]}</td>;\n                })}\n              </tr>\n            );\n          })\n        ) : (\n          <tr>\n            <td colSpan={props.tableStructure.columns.length}>\n              Results could not be retrieved.\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { Table } from \"../../reusables/Table\";\n\n/**\n * This component contains the listing of all characters belonging to the currently signed in user.\n */\nexport const Characters = () => {\n  const allData = useSelector((state) => state.data.characters);\n\n  const tableCols = [\n    \"\", // The first column needs to be empty for the edit/delete\n    \"ID\",\n    \"Name\",\n    \"Level\",\n    \"Class\",\n    \"Race\",\n    \"Str\",\n    \"Dex\",\n    \"Con\",\n    \"Int\",\n    \"Wis\",\n    \"Cha\",\n  ];\n\n  const tableData = {\n    columns: tableCols,\n    type: \"characters\",\n  };\n\n  return (\n    <>\n      <h2>Characters</h2>\n      <Table\n        tableStructure={tableData}\n        data={allData}\n        resourceType=\"characters\"\n      />\n    </>\n  );\n};\n","import { Field, Form } from \"react-final-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { changeEditingStatuses } from \"../../../../redux/dataSlice\";\nimport \"../../../../App.css\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\n/**\n * This form handles both editing and adding new characters. It relies on state to determine if the form is being\n * rendered to edit an existing resource or a new resource by checking the stat's editResourceID.\n */\nconst CharacterForm = (props) => {\n  const dispatch = useDispatch();\n  const resourceData = useSelector((state) => state.data.characters);\n  const currentlyEditing = useSelector((state) => state.data.editResourceID);\n\n  // An immediately invoked function to assign initial form values based on state\n  let formData = (() => {\n    if (resourceData) {\n      return resourceData.filter(\n        (current) => current.id === currentlyEditing\n      )[0];\n    }\n  })();\n\n  // Parallel to componentWillUnmount\n  // Runs when component is unmounting to reset the currently editing stats\n  useEffect(() => {\n    return () => {\n      dispatch(changeEditingStatuses({ isEditing: false, editResourceID: 0 }));\n    };\n  });\n\n  /**\n   * Fields for MVP: Name, Level, Class, Race, Health, AC, Primary Stats\n   */\n\n  return (\n    <div>\n      <Form\n        onSubmit={props.submitHandler}\n        initialValues={{ ...formData }}\n        render={({ handleSubmit, form, submitting, pristine, values }) => (\n          <form onSubmit={handleSubmit}>\n            <Field name=\"name\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Name:</label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className=\"form-control\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"level\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Level:</label>\n                  <input\n                    {...input}\n                    type=\"number\"\n                    placeholder=\"Level\"\n                    className=\"form-control\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"race\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Race:</label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder=\"Ex: Aarakocra\"\n                    className=\"form-control\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"characterClass\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Class:</label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder=\"Ex: Barbarian\"\n                    className=\"form-control\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n\n            <fieldset className=\"container flex-wrap m-auto\">\n              <legend>Stats</legend>\n              <div className=\"row\">\n                <Field name=\"strength\">\n                  {({ input, meta }) => (\n                    <div className=\"form-group characterStat col-sm-3\">\n                      <label>Strength:</label>\n                      <input\n                        {...input}\n                        type=\"number\"\n                        className=\"form-control\"\n                      />\n                      {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"dexterity\">\n                  {({ input, meta }) => (\n                    <div className=\"form-group characterStat col-sm-3\">\n                      <label>Dexterity:</label>\n                      <input\n                        {...input}\n                        type=\"number\"\n                        className=\"form-control\"\n                      />\n                      {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"constitution\">\n                  {({ input, meta }) => (\n                    <div className=\"form-group characterStat col-sm-3\">\n                      <label>Constitution:</label>\n                      <input\n                        {...input}\n                        type=\"number\"\n                        className=\"form-control\"\n                      />\n                      {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"intelligence\">\n                  {({ input, meta }) => (\n                    <div className=\"form-group characterStat col-sm-3\">\n                      <label>Intelligence:</label>\n                      <input\n                        {...input}\n                        type=\"number\"\n                        className=\"form-control\"\n                      />\n                      {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"wisdom\">\n                  {({ input, meta }) => (\n                    <div className=\"form-group characterStat col-sm-3\">\n                      <label>Wisdom:</label>\n                      <input\n                        {...input}\n                        type=\"number\"\n                        className=\"form-control\"\n                      />\n                      {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"charisma\">\n                  {({ input, meta }) => (\n                    <div className=\"form-group characterStat col-sm-3\">\n                      <label>Charisma:</label>\n                      <input\n                        {...input}\n                        type=\"number\"\n                        className=\"form-control\"\n                      />\n                      {meta.error && meta.touched && <span>{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n            </fieldset>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                disabled={submitting || pristine}\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                onClick={form.reset}\n                disabled={submitting || pristine}\n                className=\"btn btn-link\"\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default CharacterForm;\n","import CharacterForm from \"./forms/CharacterForm\";\nimport {\n  addResourceThunk,\n  changeEditingStatuses,\n  editResourceThunk,\n  initDatasetThunk,\n} from \"../../../redux/dataSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeCurrentContent } from \"../../../redux/displaySlice\";\n\n/**\n * This is a wrapper component for the characters form that defines handler logic for the form.\n */\nconst AddEditCharacter = (props) => {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.login.authInfo.user);\n\n  const h2Text =\n    props.formType === \"add\" ? \"Add A New Character\" : \"Edit Character\";\n\n  const addNewSubmitHandler = async (values) => {\n    console.log(\"Submitting new character....\");\n    console.log(values);\n    await dispatch(\n      addResourceThunk({\n        jwt: userData.signInUserSession.idToken.jwtToken,\n        dataEndpoint: \"characters\",\n        formData: values,\n      })\n    );\n    dispatch(changeEditingStatuses({ isEditing: false, editResourceID: 0 }));\n    dispatch(changeCurrentContent({ newContent: \"characters\" })); // TODO polish this\n    dispatch(\n      initDatasetThunk({ jwt: userData.signInUserSession.idToken.jwtToken })\n    );\n  };\n\n  const editSubmitHandler = (values) => {\n    console.log(\"Editing.\");\n    console.log(values);\n    dispatch(\n      editResourceThunk({\n        jwt: userData.signInUserSession.idToken.jwtToken,\n        dataEndpoint: \"characters\",\n        formData: values,\n      })\n    );\n    dispatch(changeEditingStatuses({ isEditing: false, editResourceID: 0 }));\n    dispatch(changeCurrentContent({ newContent: \"characters\" })); // TODO polish this\n    dispatch(\n      initDatasetThunk({ jwt: userData.signInUserSession.idToken.jwtToken })\n    );\n  };\n\n  return (\n    <>\n      <h2>{h2Text}</h2>\n      <CharacterForm\n        submitHandler={\n          props.formType === \"add\" ? addNewSubmitHandler : editSubmitHandler\n        }\n      />\n    </>\n  );\n};\n\nexport default AddEditCharacter;\n","import { useSelector } from \"react-redux\";\nimport { Table } from \"../../reusables/Table\";\n\n/**\n * This component contains the listing of all characters belonging to the currently signed in user.\n */\nexport const Encounters = () => {\n  const encountersData = useSelector((state) => state.data.encounters);\n\n  const tableCols = [\"\", \"ID\", \"Title\", \"Difficulty\", \"Description\"]; // the first column must be empty for the edit/delete\n  const tableData = {\n    columns: tableCols,\n    type: \"encounters\",\n  };\n\n  return (\n    <>\n      <h2>Encounters</h2>\n      <Table\n        tableStructure={tableData}\n        data={encountersData}\n        resourceType=\"encounters\"\n      />\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Field, Form } from \"react-final-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { changeEditingStatuses } from \"../../../../redux/dataSlice\";\n\nconst required = (value) => (value ? undefined : \"Required\");\n\n/**\n * This form handles both editing and adding new encounters. It relies on state to determine if the form is being\n * rendered to edit an existing resource or a new resource by checking the stat's editResourceID.\n */\nconst EncounterForm = (props) => {\n  const dispatch = useDispatch();\n  const encountersData = useSelector((state) => state.data.encounters);\n  const currentlyEditing = useSelector((state) => state.data.editResourceID);\n\n  // An immediately invoked function to assign initial form values based on state\n  let formData = (() => {\n    if (encountersData) {\n      return encountersData.filter(\n        (current) => current.id === currentlyEditing\n      )[0];\n    }\n  })();\n\n  // Parallel to componentWillUnmount\n  // Runs when component is unmounting to reset the currently editing stats\n  useEffect(() => {\n    return () => {\n      dispatch(changeEditingStatuses({ isEditing: false, editResourceID: 0 }));\n    };\n  }, []);\n\n  return (\n    <div>\n      <Form\n        onSubmit={props.submitHandler}\n        initialValues={formData}\n        render={({ handleSubmit, form, submitting, pristine, values }) => (\n          <form onSubmit={handleSubmit}>\n            <Field name=\"title\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Title:</label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    className=\"form-control\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"difficulty\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Difficulty:</label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder=\"Level\"\n                    className=\"form-control\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"description\" component=\"textarea\" validate={required}>\n              {({ input, meta }) => (\n                <div className=\"form-group\">\n                  <label>Description:</label>\n                  <textarea\n                    {...input}\n                    type=\"textarea\"\n                    placeholder=\"Hit Points\"\n                    className=\"form-control\"\n                    rows=\"4\"\n                  />\n                  {meta.error && meta.touched && <span>{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                disabled={submitting || pristine}\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n              <button\n                type=\"button\"\n                onClick={form.reset}\n                disabled={submitting || pristine}\n                className=\"btn btn-link\"\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default EncounterForm;\n","import EncounterForm from \"./forms/EncounterForm\";\nimport {\n  addResourceThunk,\n  changeEditingStatuses,\n  editResourceThunk,\n  initDatasetThunk,\n} from \"../../../redux/dataSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeCurrentContent } from \"../../../redux/displaySlice\";\n\n/**\n * This is a wrapper component for the encounters form that defines handler logic for the form.\n */\nconst AddEditEncounter = (props) => {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.login.authInfo.user);\n\n  const h2Text =\n    props.formType === \"add\" ? \"Add A New Encounter\" : \"Edit Encounter\";\n\n  const addNewSubmitHandler = async (values) => {\n    console.log(\"Submitting new encounter....\");\n    console.log(values);\n    await dispatch(\n      addResourceThunk({\n        jwt: userData.signInUserSession.idToken.jwtToken,\n        dataEndpoint: \"encounters\",\n        formData: values,\n      })\n    );\n    await dispatch(\n      changeEditingStatuses({ isEditing: false, editResourceID: 0 })\n    );\n    dispatch(changeCurrentContent({ newContent: \"encounters\" })); // TODO polish this\n    dispatch(\n      initDatasetThunk({ jwt: userData.signInUserSession.idToken.jwtToken })\n    );\n  };\n\n  const editSubmitHandler = async (values) => {\n    console.log(\"Editing.\");\n    console.log(values);\n    dispatch(\n      editResourceThunk({\n        jwt: userData.signInUserSession.idToken.jwtToken,\n        dataEndpoint: \"encounters\",\n        formData: values,\n      })\n    );\n    await dispatch(\n      changeEditingStatuses({ isEditing: false, editResourceID: 0 })\n    );\n    dispatch(changeCurrentContent({ newContent: \"encounters\" })); // TODO polish this\n    dispatch(\n      initDatasetThunk({ jwt: userData.signInUserSession.idToken.jwtToken })\n    );\n  };\n\n  return (\n    <>\n      <h2>{h2Text}</h2>\n      <EncounterForm\n        submitHandler={\n          props.formType === \"add\" ? addNewSubmitHandler : editSubmitHandler\n        }\n      />\n    </>\n  );\n};\n\nexport default AddEditEncounter;\n","/**\n * Very simple home component just to display basic instructional text\n */\nexport const Home = () => {\n  return (\n    <>\n      <h2>Home</h2>\n      <p>\n        Welcome to DMBook! Here, you can create and maintain a list of\n        encounters and characters related to your DND campaign! Use the\n        navigation menu on the left to manage each type of data.\n      </p>\n      <p>\n        This application was built for the Fall 2021 semester of Enterprise Java\n        at Madison College.\n      </p>\n    </>\n  );\n};\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-2\",\n    \"aws_cognito_identity_pool_id\": \"us-east-2:a13fbe36-ed03-4bbe-a7b6-19497425c8f3\",\n    \"aws_cognito_region\": \"us-east-2\",\n    \"aws_user_pools_id\": \"us-east-2_Fnydgk1C2\",\n    \"aws_user_pools_web_client_id\": \"1i5fuqgr4vvhcjnf3vvnirp4vf\",\n    \"oauth\": {},\n    \"aws_cognito_username_attributes\": [],\n    \"aws_cognito_social_providers\": [],\n    \"aws_cognito_signup_attributes\": [\n        \"EMAIL\"\n    ],\n    \"aws_cognito_mfa_configuration\": \"OFF\",\n    \"aws_cognito_mfa_types\": [\n        \"SMS\"\n    ],\n    \"aws_cognito_password_protection_settings\": {\n        \"passwordPolicyMinLength\": 8,\n        \"passwordPolicyCharacters\": []\n    },\n    \"aws_cognito_verification_mechanisms\": [\n        \"EMAIL\"\n    ]\n};\n\n\nexport default awsmobile;\n","import { AmplifyAuthenticator } from \"@aws-amplify/ui-react\";\nimport Amplify from \"@aws-amplify/core\";\nimport awsconfig from \"../../../aws-exports\";\n\nAmplify.configure(awsconfig);\n\n/**\n * This is a wrapper for a provided AWS AmplifyAuthenticator component that handles the login and user\n * registration process.\n */\nexport const Login = () => {\n  return <AmplifyAuthenticator />;\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Characters } from \"./mainContent/characters/Characters\";\nimport AddEditCharacter from \"./mainContent/characters/AddEditCharacter\";\nimport { Encounters } from \"./mainContent/encounters/Encounters\";\nimport AddEditEncounter from \"./mainContent/encounters/AddEditEncounter\";\nimport { Home } from \"./mainContent/home/Home\";\nimport { Login } from \"./mainContent/login/Login\";\n\nconst styles = {\n  border: \"1px solid black\",\n};\n\n/**\n * This component acts as a pseudo-router to display the main content area. It relies on the currentContent\n * state object in the display slice to determine which content to display.\n *\n * Some content sections, namely characters and encounters, have either :add or :edit after their main content.\n * This is done to determine which form type to add (edit or add) when rendering that form, via the formType prop.\n */\nexport const MainContent = (props) => {\n  const currentContent = useSelector((state) => state.display.currentContent);\n\n  return (\n    <main className={\"col-sm-9\"} style={styles}>\n      {currentContent === \"home\" && <Home />}\n      {currentContent === \"login\" && <Login />}\n      {currentContent === \"characters\" && <Characters />}\n      {currentContent === \"characters:add\" && (\n        <AddEditCharacter formType=\"add\" />\n      )}\n      {currentContent === \"characters:edit\" && (\n        <AddEditCharacter formType=\"edit\" />\n      )}\n      {currentContent === \"encounters\" && <Encounters />}\n      {currentContent === \"encounters:add\" && (\n        <AddEditEncounter formType=\"add\" />\n      )}\n      {currentContent === \"encounters:edit\" && (\n        <AddEditEncounter formType=\"edit\" />\n      )}\n    </main>\n  );\n};\n","import { Sidebar } from \"./layout/SideBar\";\nimport { MainContent } from \"./layout/MainContent\";\nimport Amplify from \"aws-amplify\";\nimport awsconfig from \"./aws-exports\";\nimport { withAuthenticator } from \"@aws-amplify/ui-react\";\nimport Auth from \"@aws-amplify/auth\";\nimport { onAuthUIStateChange } from \"@aws-amplify/ui-components\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateAuthInfo } from \"./redux/loginSlice\";\nimport { initDatasetThunk } from \"./redux/dataSlice\";\n\nAmplify.configure(awsconfig);\n\n/**\n * This renders the app itself and contains some app-wide logic related to login information.\n */\nconst App = () => {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.login.authInfo.user);\n  const jwt = Auth.currentSession();\n\n  // Run this request once when the component first renders to request all user data\n  useEffect(async () => {\n    const promise = await dispatch(\n      initDatasetThunk({\n        jwt: (await jwt).getIdToken().getJwtToken(),\n      })\n    );\n    return () => {\n      promise.abort();\n    };\n  }, [initDatasetThunk]);\n\n  // useEffect\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      dispatch(\n        updateAuthInfo({\n          authInfo: { authState: nextAuthState, user: authData },\n        })\n      );\n    });\n  }, []);\n\n  return (\n    <div className=\"App row m-4\">\n      <Sidebar />\n      <MainContent />\n    </div>\n  );\n};\n\nexport default withAuthenticator(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}